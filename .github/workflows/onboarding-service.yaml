name: Tenant Onboarding Tool
on:
  push: 
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  Tenant-Generator:
    runs-on: ubuntu-latest
    steps:

      # - name: Setup output var
      #   id: test 
      #   run: echo "TEST=first line\n second line\n third line" >> $GITHUB_OUTPUT



      - uses: actions/checkout@v3
      - name: Build
        id: build
        run: |
          pwd
          cd ${{github.workspace}}/scripts
          ls -la
          npmv=$(npm --version)
          echo "NPM version installed : " $npmv
          nodev=$(node --version)
          echo "Node version installed : " $nodev
          npm install
          echo " Repo: ${{ github.repository }}"
          echo " Space: ${{ github.workspace }}" 
          result=$(npm run start 286)
          echo "********** TENANT CONFIGURATION *********************"
          echo "$result"
         echo "TEST=first line\n second line\n $result" >> $GITHUB_OUTPUT
          if [[ $result == *'FAILED'* ]] ;then
          echo "Onboarding config writer failed and exiting the Job..."
          exit 1
          elif [[ $result == *'PASSED'* ]] ;then
          echo "Onboarding config writer Ran Successfully....üçè"
          cd ${{github.workspace}}
          pwd
          ls -la 
          echo "********** TENANT GENERATOR *********************"
          echo "$tenant"
          fi      

      - name: Check output var
        run: |
          echo ${{steps.build.outputs.TEST}} #Will keep the n from the \n
          echo -e "${{steps.build.outputs.TEST}}" #Will break the line from the \n

      #- run: # tenant=$(./startup.sh -f '-rthe')       
      #- run: echo "üçè This job's status is ${{ job.status }} check = ${{ steps.build.outputs.pr_title }}"
      # - name: Pushing tenant file remotely
      #   uses: dmnemec/copy_file_to_another_repo_action@main
      #   env:
      #     API_TOKEN_GITHUB: ${{ secrets.API_KEY_GITHUB }}
      #   with:
      #     source_file: '${{github.workspace}}/tenant.json'
      #     destination_repo: 'Fiserv/RustTenant'
      #     destination_folder: 'config'
      #     destination_branch: 'develop'
      #     user_email: 'abhishek.singh3@fiserv.com'
      #     user_name: 'asingh2023'
      #     commit_message: 'pushing tenant json file remotely' 
           
      # - name: Pushing DbScript file remotely
      #   uses: dmnemec/copy_file_to_another_repo_action@main
      #   env:
      #     API_TOKEN_GITHUB: ${{ secrets.API_KEY_GITHUB }}
      #   with:
      #     source_file: '${{github.workspace}}/dbscripts/cool-tenant_dev_db_script.js'
      #     destination_repo: 'Fiserv/tenants-data'
      #     destination_folder: 'dbscripts'
      #     destination_branch: 'main'
      #     user_email: 'abhishek.singh3@fiserv.com'
      #     user_name: 'asingh2023'
      #     commit_message: 'pushing tenant json file remotely'
      
